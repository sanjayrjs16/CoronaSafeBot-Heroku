# This is a basic workflow to help you get started with Actions

name: Push Container to digital ocean

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#     - name: Checkout files
#       uses: actions/checkout@v2
#     - name: Build and push Docker images
#       uses: docker/build-push-action@v1
#       with:
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_PASSWORD }}
#         repository: sanjayr16/coronasafebot
#         tag_with_ref: true
#         tag_with_sha: true
    - name: Connect to digital ocean server with ssh
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{secrets.SSH_HOST}}
        username: ${{secrets.SSH_USERNAME}}
        key: ${{secrets.SSH_KEY}}
        script: |
              echo "SSH: Connected  succesfully!"
              docker run -e TOKEN_TG=${{secrets.TOKEN_TG}} -e VERIFY_TG=${{secrets.VERIFY_TG}} -e VERIFY_FB=${{secrets.VERIFY_FB}} -e WEBHOOK_URL_TG=${{secrets.WEBHOOK_URL_TG}} -e TOKEN_FB=${{secrets.TOKEN_FB}} -e SECRET_FB=${{secrets.SECRET_FB}} -p 3000 sanjayr16/coronasafebot

#     - name: Build and deploy docker image
#       run: docker run -e TOKEN_TG=${{secrets.TOKEN_TG}} -e VERIFY_TG=${{secrets.VERIFY_TG}} -e VERIFY_FB=${{secrets.VERIFY_FB}} -e WEBHOOK_URL_TG=${{secrets.WEBHOOK_URL_TG}} -e TOKEN_FB=${{secrets.TOKEN_FB}} -e SECRET_FB=${{secrets.SECRET_FB}} -p 3000 sanjayr16/coronasafebot:dev
#   deploy:
#     needs: build
    
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Checkout files    
#         uses: actions/checkout@v2
        
#       - name: Get tag name
#         uses: olegtarasov/get-tag@v2
        
#       - name: Install doctl
#         uses: digitalocean/action-doctl@v2
#         with:
#          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
         
#       - name: Provision Droplet and deploy container
#         run: doctl compute droplet create "CoronaSafeNetwork-Chatbot" --image docker-20-04 --size s-1vcpu-1gb --region blr1 --user-data-file deploy.sh --wait


